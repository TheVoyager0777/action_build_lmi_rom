name: build_lmi_system_encryptable_OneDrivePush
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
       - uses: actions/checkout@master
       - name: 1.获取配置
         run: |
          source "$GITHUB_WORKSPACE"/resource/config.env
          echo "ROM_URL=$ROM_URL" >> $GITHUB_ENV
          echo "date=$(echo $ROM_URL | cut -d"/" -f4)" >> $GITHUB_ENV
       - name: 2.安装依赖
         run: |
          sudo apt install python3 python3-pip aria2 zip p7zip-full zipalign
          sudo apt --fix-broken install
          sudo apt update --fix-missing
          pip3 install --upgrade pip
          pip3 install pycryptodome
          pip3 install setuptools
          pip3 install docopt
          pip3 install requests
          pip3 install beautifulsoup4
          pip3 install --ignore-installed pyyaml
          curl https://rclone.org/install.sh | sudo bash
          mkdir -p ~/.config/rclone/
          unzip -P ${{ secrets.PASSWORD }} "$GITHUB_WORKSPACE"/tools/rclone.zip -d ~/.config/rclone/
       - name: 3.下载系统包
         run: |
          aria2c -x16 -j$(nproc) -U "Mozilla/5.0" -d "$GITHUB_WORKSPACE" ${{ env.ROM_URL }}
          aria2c -x16 -j$(nproc) -U "Mozilla/5.0" -d "$GITHUB_WORKSPACE" https://bigota.d.miui.com/22.7.19/miui_LMIPRE_22.7.19_0c8ec819b7_12.0.zip
       - name: 4.解包
         run: |
          sudo chmod 777 "$GITHUB_WORKSPACE"/tools/payload-dumper-go
          sudo chmod 777 "$GITHUB_WORKSPACE"/tools/brotli
          mkdir -p "$GITHUB_WORKSPACE"/PSYCHE
          mkdir -p "$GITHUB_WORKSPACE"/images
          mkdir -p "$GITHUB_WORKSPACE"/simages
          mkdir -p "$GITHUB_WORKSPACE"/zip
          mkdir -p "$GITHUB_WORKSPACE"/firmware
          ZIP_NAME_PSYCHE=$(echo ${{ env.ROM_URL }} | cut -d"/" -f5)
          7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_PSYCHE -r -o"$GITHUB_WORKSPACE"/PSYCHE
          rm -rf "$GITHUB_WORKSPACE"/$ZIP_NAME_PSYCHE
          ZIP_NAME_LMI=miui_LMIPRE_22.7.19_0c8ec819b7_12.0.zip
          7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_LMI -r -o"$GITHUB_WORKSPACE"/images firmware-update
          7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_LMI -r -o"$GITHUB_WORKSPACE"/images boot.img
          for i in vendor odm
          do
            7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_LMI -o"$GITHUB_WORKSPACE"/images $i.transfer.list
            7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_LMI -o"$GITHUB_WORKSPACE"/images $i.patch.dat
            7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_LMI -o"$GITHUB_WORKSPACE"/images $i.new.dat.br
            "$GITHUB_WORKSPACE"/tools/brotli -d "$GITHUB_WORKSPACE"/images/$i.new.dat.br
            rm -rf "$GITHUB_WORKSPACE"/images/$i.new.dat.br
            python3 "$GITHUB_WORKSPACE"/tools/sdat2img.py "$GITHUB_WORKSPACE"/images/$i.transfer.list "$GITHUB_WORKSPACE"/images/$i.new.dat "$GITHUB_WORKSPACE"/images/$i.img
            rm -rf "$GITHUB_WORKSPACE"/images/$i.patch.dat
            rm -rf "$GITHUB_WORKSPACE"/images/$i.transfer.list
            rm -rf "$GITHUB_WORKSPACE"/images/$i.new.dat
            echo ""$i"_indoe=$(tune2fs -l "$GITHUB_WORKSPACE"/images/$i.img | grep 'Inode count' | awk '{print $3}')" >> $GITHUB_ENV
            sudo python3 "$GITHUB_WORKSPACE"/tools/imgextractorLinux.py "$GITHUB_WORKSPACE"/images/$i.img "$GITHUB_WORKSPACE"/images
            rm -rf "$GITHUB_WORKSPACE"/images/$i.img
          done
          for i in system product system_ext
          do
            "$GITHUB_WORKSPACE"/tools/payload-dumper-go -p $i "$GITHUB_WORKSPACE"/PSYCHE/payload.bin
            mv "$GITHUB_WORKSPACE"/payload/$i.img "$GITHUB_WORKSPACE"/images/$i.img
            echo ""$i"_indoe=$(tune2fs -l "$GITHUB_WORKSPACE"/images/$i.img | grep 'Inode count' | awk '{print $3}')" >> $GITHUB_ENV
            sudo python3 "$GITHUB_WORKSPACE"/tools/imgextractorLinux.py "$GITHUB_WORKSPACE"/images/$i.img "$GITHUB_WORKSPACE"/images
            rm -rf "$GITHUB_WORKSPACE"/images/$i.img
          done
          rm -rf "$GITHUB_WORKSPACE"/payload
          rm -rf "$GITHUB_WORKSPACE"/PSYCHE
       - name: 5.替换相关文件
         run: |
          sudo chmod 777 "$GITHUB_WORKSPACE"/tools/apktool.jar
          Apktool="java -jar "$GITHUB_WORKSPACE"/tools/apktool.jar"
          echo 导入框架
          $Apktool if "$GITHUB_WORKSPACE"/images/system/system/app/miui/miui.apk
          $Apktool if "$GITHUB_WORKSPACE"/images/system/system/app/miuisystem/miuisystem.apk
          $Apktool if "$GITHUB_WORKSPACE"/images/system/system/framework/framework-res.apk
          $Apktool if "$GITHUB_WORKSPACE"/images/system/system/framework/framework-ext-res/framework-ext-res.apk
          sudo mkdir -p /root/.local/share/apktool/framework/
          sudo mv /home/runner/.local/share/apktool/framework/* /root/.local/share/apktool/framework/
          sudo mkdir -p "$GITHUB_WORKSPACE"/images/system/system/etc/audio
          sudo rm -rf "$GITHUB_WORKSPACE"/images/product/etc/device_features/*
          sudo rm -rf "$GITHUB_WORKSPACE"/images/product/overlay/DeviceAndroidConfig.apk
          sudo rm -rf "$GITHUB_WORKSPACE"/images/product/overlay/DeviceConfig.apk
          sudo cp -f "$GITHUB_WORKSPACE"/resource/AospFrameworkResOverlay.apk "$GITHUB_WORKSPACE"/images/product/overlay/
          sudo cp -f "$GITHUB_WORKSPACE"/resource/DevicesAndroidOverlay.apk "$GITHUB_WORKSPACE"/images/product/overlay/
          sudo cp -f "$GITHUB_WORKSPACE"/resource/DevicesOverlay.apk "$GITHUB_WORKSPACE"/images/product/overlay/
          sudo cp -f "$GITHUB_WORKSPACE"/resource/MiuiFrameworkResOverlay.apk "$GITHUB_WORKSPACE"/images/product/overlay/
          sudo cp -f "$GITHUB_WORKSPACE"/resource/SettingsResCommon_Sys.apk "$GITHUB_WORKSPACE"/images/product/overlay/
          sudo cp -f "$GITHUB_WORKSPACE"/resource/lmi.xml "$GITHUB_WORKSPACE"/images/product/etc/device_features/
          sudo cp -f "$GITHUB_WORKSPACE"/resource/lmipro.xml "$GITHUB_WORKSPACE"/images/product/etc/device_features/
          sudo sed -i "/ro.miui.notch/d" "$GITHUB_WORKSPACE"/images/product/etc/build.prop
          sudo rm -rf "$GITHUB_WORKSPACE"/images/system/cache
          sudo mkdir -p "$GITHUB_WORKSPACE"/images/system/cache
          sudo sed -i 's/ro.product.mod_device=[^*]*/ro.product.mod_device=lmi_pre/' "$GITHUB_WORKSPACE"/images/system/system/build.prop
          sudo sed -i 's/ro.miui.cust_device=[^*]*/ro.miui.cust_device=lmi/' "$GITHUB_WORKSPACE"/images/system/system/build.prop
          sudo sed -i 's/ro.build.user=[^*]*/ro.build.user=相见即是缘/' "$GITHUB_WORKSPACE"/images/system/system/build.prop
          sudo sed -i 's/ro.build.version.base_os=[^*]*/ro.build.version.base_os=psyche/' "$GITHUB_WORKSPACE"/images/system/system/build.prop
          sudo rm -rf "$GITHUB_WORKSPACE"/images/vendor/recovery-from-boot.p
          sudo rm -rf "$GITHUB_WORKSPACE"/images/vendor/bin/install-recovery.sh
          sudo sed -i "s/sustem/system/g" "$GITHUB_WORKSPACE"/images/vendor/etc/selinux/vendor_file_contexts
          sudo sed -i "/ro.vendor.audio.game.effect/d" "$GITHUB_WORKSPACE"/images/vendor/build.prop
          sudo sed -i "/import/i ro.miui.region=CN\nro.miui.cust_variant=cn\nro.vendor.audio.support.sound.id=true\nro.vendor.audio.voip.assistant=true\nro.vendor.audio.aiasst.support=true\nro.vendor.media.video.frc.support=true\nro.vendor.audio.spk.stereo=true\nro.vendor.audio.vocal.support=true\nro.vendor.audio.surround.support=true\nro.vendor.audio.spk.clean=true\nro.vendor.video_box.version=2" "$GITHUB_WORKSPACE"/images/vendor/build.prop
          sudo unzip -o -q "$GITHUB_WORKSPACE"/resource/nfc.zip -d "$GITHUB_WORKSPACE"/images/system_ext
          sudo unzip -o -q "$GITHUB_WORKSPACE"/resource/audio.zip -d "$GITHUB_WORKSPACE"/images/system/system/media/audio/ui/
          sudo unzip -o -q "$GITHUB_WORKSPACE"/resource/etc.zip -d "$GITHUB_WORKSPACE"/images/system/system/etc/audio/
          sudo unzip -o -q "$GITHUB_WORKSPACE"/resource/bootan.zip -d "$GITHUB_WORKSPACE"/images/system/system/media/
          #取消强制加密
          fstab=$(sudo find "$GITHUB_WORKSPACE"/images/vendor/ -name "fstab*")
          if [[ $fstab == "" ]];then
            echo -e "\e[31m     >>>>>>>>找不到相关文件,也许没有加密呢>>>>>>>>>  \e[0m"
            echo ""
            sleep 5
            else
            echo -e "\e[31m     >>>>>>  正在去除,请等待....  >>>>>>> \e[0m"
            for file in $fstab; do
              sudo sed -i 's/,avb.*system//g' $file
              sudo sed -i 's/,avb,/,/g' $file
              sudo sed -i 's/,avb_keys.*key//g' $file
              sudo sed -i "s/\b\(forceencrypt\|forcefdeorfbe\)=/encryptable=/g" "$file"
              sudo sed -i "s/\bfileencryption/encryptable/g" "$file"
            done
          fi
          #系统升降修复
          mkdir -p "$GITHUB_WORKSPACE"/popupfix
          sudo cp -rf "$GITHUB_WORKSPACE"/images/system/system/framework/framework-ext-res/framework-ext-res.apk "$GITHUB_WORKSPACE"/popupfix
          mkdir -p "$GITHUB_WORKSPACE"/popupfix/id
          cd "$GITHUB_WORKSPACE"/popupfix/id
          $Apktool d -q -b -f -m "$GITHUB_WORKSPACE"/popupfix/framework-ext-res.apk
          echo "- 解读id完成"
          idmod="$GITHUB_WORKSPACE"/popupfix/id/framework-ext-res/res/values/public.xml
          sudo sed -i 's/ //g' $idmod
          sudo sed -i 's/\"//g' $idmod
          sudo sed -i 's/\/>//g' $idmod
          sudo sed -i 's/<publictype=[^*]*name=//g' $idmod
          sudo sed -i 's/<?xmlversion=1\.0encoding=utf-8?>//g' $idmod
          sudo sed -i 's/<resources>//g' $idmod
          sudo sed -i 's/<\/resources>//g' $idmod
          sudo sed -i '/^$/d' $idmod
          sudo sed -i 's/\$//g' $idmod
          sudo sed -i 's/\.//g' $idmod
          echo "- 开始释放升降.jar"
          mkdir -p "$GITHUB_WORKSPACE"/popup
          sudo cp -rf "$GITHUB_WORKSPACE"/images/system/system/framework/miui-services.jar "$GITHUB_WORKSPACE"/popup/miui-services.apk
          cd "$GITHUB_WORKSPACE"/popup
          sudo $Apktool d -q -b -r -f -m "$GITHUB_WORKSPACE"/popup/miui-services.apk
          sudo unzip -q -o -P ${{ secrets.POPUPFIX }} "$GITHUB_WORKSPACE"/resource/classes.zip -d "$GITHUB_WORKSPACE"/popup/miui-services/smali/
          source $idmod
          echo "- 填写修复升降所需要的资源id"
          mod="$GITHUB_WORKSPACE"/popup/miui-services/smali/com/miui/server/popupcamera/view/UpAndDownAnimationView.smali
          sudo sed -i "s/uucchw/$camera_close_high_waveid/g" $mod
          sudo sed -i "s/uu2cchw/$camera_close_high_wave2id/g" $mod
          sudo sed -i "s/uucclw/$camera_close_low_waveid/g" $mod
          sudo sed -i "s/uu2cclw/$camera_close_low_wave2id/g" $mod
          sudo sed -i "s/uucohw/$camera_open_high_waveid/g" $mod
          sudo sed -i "s/uu2cohw/$camera_open_high_wave2id/g" $mod
          sudo sed -i "s/uucolw/$camera_open_low_waveid/g" $mod
          sudo sed -i "s/uu2colw/$camera_open_low_wave2id/g" $mod
          sudo sed -i "s/h1ighwave/$highWaveid/g" $mod
          sudo sed -i "s/l1owwave/$lowWaveid/g" $mod
          sudo sed -i "s/uupchw/$pop_camera_high_waveid/g" $mod
          sudo sed -i "s/uu1pchw/$pop_camera_high_wave1id/g" $mod
          sudo sed -i "s/uu2pchw/$pop_camera_high_wave2id/g" $mod
          sudo sed -i "s/uu3pchw/$pop_camera_high_wave3id/g" $mod
          sudo sed -i "s/uu4pchw/$pop_camera_high_wave4id/g" $mod
          sudo sed -i "s/uu5pchw/$pop_camera_high_wave5id/g" $mod
          sudo sed -i "s/uupclw/$pop_camera_low_waveid/g" $mod
          sudo sed -i "s/uu1pclw/$pop_camera_low_wave1id/g" $mod
          sudo sed -i "s/uu2pclw/$pop_camera_low_wave2id/g" $mod
          sudo sed -i "s/uu3pclw/$pop_camera_low_wave3id/g" $mod
          sudo sed -i "s/uu4pclw/$pop_camera_low_wave4id/g" $mod
          sudo sed -i "s/uu5pclw/$pop_camera_low_wave5id/g" $mod
          sudo sed -i "s/uuuadav/$up_and_down_animation_viewid/g" $mod
          echo "- 填写完成，开始打包"
          cd "$GITHUB_WORKSPACE"/popup/miui-services/
          sudo $Apktool b -q -f -c "$GITHUB_WORKSPACE"/popup/miui-services/ -o miui-services.jar
          sudo cp -rf "$GITHUB_WORKSPACE"/popup/miui-services/miui-services.jar "$GITHUB_WORKSPACE"/images/system/system/framework/miui-services.jar
          sudo rm -rf "$GITHUB_WORKSPACE"/images/system/system/framework/oat/arm64/miui-services.*
          #妙享白名单破解
          sudo mkdir -p "$GITHUB_WORKSPACE"/MiLink/
          $Apktool d -q -r -f -o "$GITHUB_WORKSPACE"/MiLink/ "$GITHUB_WORKSPACE"/images/system/system/app/MiLinkCirculate/MiLinkCirculate.apk
          mod="$GITHUB_WORKSPACE"/MiLink/smali*/com/miui/circulate/world/permission/method/PermissionCheck\$BaseCheck.smali
          sudo sed -i '/^.method public check()Z/,/^.end method/{//!d}' $mod
          sudo sed -i -e '/^.method public check()Z/a\    .locals 1\n\n    const/4 v0, 0x1\n\n   return v0' $mod
          $Apktool b -q -f -o "$GITHUB_WORKSPACE"/MiLink/MiLinkCirculate.apk "$GITHUB_WORKSPACE"/MiLink/
          cd "$GITHUB_WORKSPACE"/MiLink/build/apk
          sudo 7z a "$GITHUB_WORKSPACE"/images/system/system/app/MiLinkCirculate/MiLinkCirculate.apk ./*.dex -mx0
          sudo rm -rf "$GITHUB_WORKSPACE"/images/system/system/app/MiLinkCirculate/oat
          sudo mv "$GITHUB_WORKSPACE"/images/system/system/app/MiLinkCirculate/MiLinkCirculate.apk "$GITHUB_WORKSPACE"/MiLink/MiLinkCirculate.apk
          sudo zipalign -v 4 "$GITHUB_WORKSPACE"/MiLink/MiLinkCirculate.apk "$GITHUB_WORKSPACE"/images/system/system/app/MiLinkCirculate/MiLinkCirculate.apk >/dev/null
          sudo mkdir -p "$GITHUB_WORKSPACE"/images/system/system/app/MiLinkCirculate/lib/arm64/
          sudo mv "$GITHUB_WORKSPACE"/MiLink/lib/arm64-v8a/* "$GITHUB_WORKSPACE"/images/system/system/app/MiLinkCirculate/lib/arm64/
          #K30pro相机前置修复
          sudo mkdir -p "$GITHUB_WORKSPACE"/MiuiCamera/
          $Apktool d -q -r -f -o "$GITHUB_WORKSPACE"/MiuiCamera/ "$GITHUB_WORKSPACE"/images/system/system/priv-app/MiuiCamera/MiuiCamera.apk
          mod=$(find "$GITHUB_WORKSPACE"/MiuiCamera/smali*/ -type f -name '*.smali' 2>/dev/null | xargs grep -rl \"pref_popup_camera\" | sed 's/^\.\///' | sort)
          item=$(grep -B 10 pref_popup_camera $mod | grep -n "()Z" | cut -d ":" -f 2 | cut -d "," -f 2 | sed 's/L//g' | sed 's/;-/.smali/g' | sed 's/>[^*]*//g')
          item2=$(grep -B 10 \"pref_popup_camera\" $mod | grep -n "()Z" | cut -d ":" -f 2 | cut -d "," -f 2 | sed 's/L//g' | sed 's/;/.smali/g' | sed 's/[^*]*-//g' | sed 's/>/ /g')
          ikk=$(cat "$GITHUB_WORKSPACE"/MiuiCamera/smali*/$item | grep -n "$item2" | cut -d ":" -f 2)
          sudo sed -i '/^$ikk/,/^.end method/{//!d}' "$GITHUB_WORKSPACE"/MiuiCamera/smali*/$item
          sudo sed -i -e '/^$ikk/a\    .registers 1\n\n    const/4 p0, 0x0\n\n   return p0' "$GITHUB_WORKSPACE"/MiuiCamera/smali*/$item
          $Apktool b -q -f -o "$GITHUB_WORKSPACE"/MiuiCamera/MiuiCamera.apk "$GITHUB_WORKSPACE"/MiuiCamera/
          cd "$GITHUB_WORKSPACE"/MiuiCamera/build/apk
          sudo 7z a "$GITHUB_WORKSPACE"/images/system/system/priv-app/MiuiCamera/MiuiCamera.apk ./*.dex -mx0
          sudo rm -rf "$GITHUB_WORKSPACE"/images/system/system/priv-app/MiuiCamera/oat
          sudo mv "$GITHUB_WORKSPACE"/images/system/system/priv-app/MiuiCamera/MiuiCamera.apk "$GITHUB_WORKSPACE"/MiuiCamera/MiuiCamera.apk
          sudo zipalign -v 4 "$GITHUB_WORKSPACE"/MiuiCamera/MiuiCamera.apk "$GITHUB_WORKSPACE"/images/system/system/priv-app/MiuiCamera/MiuiCamera.apk >/dev/null
          sudo mv "$GITHUB_WORKSPACE"/MiuiCamera/lib/arm64-v8a/* "$GITHUB_WORKSPACE"/images/system/system/priv-app/MiuiCamera/lib/arm64/
          #设置相关使用修改
          sudo mkdir -p "$GITHUB_WORKSPACE"/Settings/one/Settings/
          sudo mkdir -p "$GITHUB_WORKSPACE"/Settings/two/
          sudo mkdir -p "$GITHUB_WORKSPACE"/Settings/three/
          sudo unzip -o "$GITHUB_WORKSPACE"/images/system_ext/priv-app/Settings/Settings.apk 'classes*.dex' -d "$GITHUB_WORKSPACE"/Settings/one/
          cd "$GITHUB_WORKSPACE"/Settings/one/
          sudo 7z a -tzip "$GITHUB_WORKSPACE"/Settings/one/Settings.apk ./*
          sudo $Apktool d -q -r -f -o "$GITHUB_WORKSPACE"/Settings/one/Settings/ "$GITHUB_WORKSPACE"/Settings/one/Settings.apk
          mod1="$GITHUB_WORKSPACE"/Settings/one/Settings/smali*/com/android/settings/SettingsActivity.smali
          sudo sed -i '/sget-boolean\ v1\, Lmiui\/os\/Build\;->IS_INTERNATIONAL_BUILD\:Z/a\    const\/4 v1\, 0x1' $mod1
          Mod1=${mod1#"$GITHUB_WORKSPACE"/Settings/one/Settings/smali*/}
          Mod1=${Mod1%/*.smali}
          sudo mkdir -p "$GITHUB_WORKSPACE"/Settings/two/Settings/smali/$Mod1
          sudo cp -rf $mod1 "$GITHUB_WORKSPACE"/Settings/two/Settings/smali/$Mod1
          mod2="$GITHUB_WORKSPACE"/Settings/one/Settings/smali*/com/android/settings/special/ColorLampEntryController.smali
          sudo sed -i -e '/^.method public bridge synthetic isSliceable()Z/i\ .method public static isNeedShowColorLamp()Z\n    .registers 1\n\n    const/4 v0, 0x0\n\n    return v0\n.end method' $mod2
          sudo sed -i 's/Lcom\/android\/settings\/utils\/SettingsFeatures\;->isNeedShowColorLamp()Z/Lcom\/android\/settings\/special\/ColorLampEntryController\;->isNeedShowColorLamp()Z/g' $mod2
          Mod2=${mod2#"$GITHUB_WORKSPACE"/Settings/one/Settings/smali*/}
          Mod2=${Mod2%/*.smali}
          sudo mkdir -p "$GITHUB_WORKSPACE"/Settings/two/Settings/smali/$Mod2
          sudo cp -rf $mod2 "$GITHUB_WORKSPACE"/Settings/two/Settings/smali/$Mod2
          sudo cp -rf "$GITHUB_WORKSPACE"/Settings/one/Settings/apktool.yml "$GITHUB_WORKSPACE"/Settings/two/Settings/
          sudo $Apktool b -q -f -o "$GITHUB_WORKSPACE"/Settings/two/Settings.apk "$GITHUB_WORKSPACE"/Settings/two/Settings/
          filepath="$GITHUB_WORKSPACE"/Settings/one/
          for file in `ls -a $filepath`
          do
          if [ "${file##*.}"x = "dex"x ];then
            old=$(echo $file | tr -d "a-zA-Z" | tr -d ".")
            if [ -Z $old ];then
             old=1
            fi
            new=$(echo $old|awk '{for(i=1;i<=NF;i++){$i+=1}}1')
            sudo cp -rf "$GITHUB_WORKSPACE"/Settings/one/$file "$GITHUB_WORKSPACE"/Settings/three/classes$new.dex
          fi
          done
          sudo unzip -o "$GITHUB_WORKSPACE"/Settings/two/Settings.apk -d "$GITHUB_WORKSPACE"/Settings/three/
          cd "$GITHUB_WORKSPACE"/Settings/three/
          sudo 7z a "$GITHUB_WORKSPACE"/images/system_ext/priv-app/Settings/Settings.apk ./*.dex -mx0
          sudo rm -rf "$GITHUB_WORKSPACE"/images/system_ext/priv-app/Settings/oat
          sudo mv "$GITHUB_WORKSPACE"/images/system_ext/priv-app/Settings/Settings.apk "$GITHUB_WORKSPACE"/Settings/Settings.apk
          sudo zipalign -v 4 "$GITHUB_WORKSPACE"/Settings/Settings.apk "$GITHUB_WORKSPACE"/images/system_ext/priv-app/Settings/Settings.apk >/dev/null
          #手机管家各种修改
          sudo mkdir -p "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/
          sudo mkdir -p "$GITHUB_WORKSPACE"/MIUISecurityCenter/two/
          sudo mkdir -p "$GITHUB_WORKSPACE"/MIUISecurityCenter/three/
          sudo unzip -o -q "$GITHUB_WORKSPACE"/images/system/system/priv-app/MIUISecurityCenter/MIUISecurityCenter.apk 'classes*.dex' -d "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/
          cd "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/
          sudo 7z a -tzip "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter.apk ./*
          sudo mkdir -p "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/res
          cd "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/res
          sudo $Apktool d -b -f -m "$GITHUB_WORKSPACE"/images/system/system/priv-app/MIUISecurityCenter/MIUISecurityCenter.apk
          for files in pc_power_settings.xml pc_power_settings_v12.xml
          do
            device=$(find "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/res/MIUISecurityCenter/ -name $files)
            sudo sed -i -e '/http\:\/\/schemas.android.com\/apk\/res\/android/a\    \<PreferenceCategory\>\n        \<PreferenceScreen android:title\=\"高级电量统计\"\>\n            \<intent android:targetPackage\=\"com.miui.powerkeeper\" android:targetClass\=\"com.miui.powerkeeper.ui.powertools.module.batterylife.BatteryStatusActivity\" \/\>\n        \<\/PreferenceScreen\>\n    \<\/PreferenceCategory\>' $device
          done
          mod=$(find "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/res/MIUISecurityCenter/ -type f -name '*.xml' 2>/dev/null | xargs grep -rl 'APKTOOL_DUMMY_' | sed 's/^\.\///' | sort)
          for a in $mod
          do
            sudo sed -i '/APKTOOL_DUMMY_/d' $a
          done
          cd "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/res/MIUISecurityCenter
          sudo $Apktool b -f "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/res/MIUISecurityCenter/ -o MIUISecurityCenter.apk
          sudo mkdir -p "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter/
          cd "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/
          sudo $Apktool d -b -r -f -m "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter.apk
          mod1="$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter/smali*/com/miui/bubbles/utils/MiuiFreeFormManagerWrapper.smali
          sudo sed -i '/^.method public static isSupportPin()Z/,/^.end method/{//!d}' $mod1
          sudo sed -i -e '/^.method public static isSupportPin()Z/a\    .registers 3\n\n    const/4 v0, 0x1\n\n   return v0' $mod1
          mod2="$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter/smali*/com/miui/permcenter/privacymanager/InterceptBaseFragment.smali
          sudo sed -i 's/0x5/0x0/g' $mod2
          mod3="$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter/smali*/com/miui/permcenter/privacymanager/InterceptPermissionFragment.smali
          sudo sed -i 's/0xa/0x0/g' $mod3
          mod4=$(find "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter/smali*/ -type f -name '*.smali' 2>/dev/null | xargs grep -rl 'refreshStats' | sed 's/^\.\///' | sort)
          sudo sed -i 's/0x1f/0x63/g' $mod4
          mod5=$(find "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter/smali*/ -type f -name 'BatteryFragment*.smali' 2>/dev/null | xargs grep -rl 'stable' | sed 's/^\.\///' | sort)
          for i in $mod5
          do
            int=$(cat $i | grep -n "stable" | cut -d ":" -f 1)
            int=$(echo "$int + 4" | bc)
            sudo sed -i -e "${int}a const/4 v1, 0x1" $i
          done
          sudo mkdir -p "$GITHUB_WORKSPACE"/MIUISecurityCenter/two/MIUISecurityCenter/smali/miui/
          sudo cp -rf "$GITHUB_WORKSPACE"/resource/czh.smali "$GITHUB_WORKSPACE"/MIUISecurityCenter/two/MIUISecurityCenter/smali/miui/
          mod6=$(find "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter/smali*/ -type f -name '*.smali' 2>/dev/null | xargs grep -rl 'mi_lab_ai_clipboard_enable' | sed 's/^\.\///' | sort)
          sudo sed -i 's/Lmiui\/os\/Build;->IS_STABLE_VERSION\:Z/Lmiui\/czh;->TRUE\:Z/g' $mod6
          mod7=$(find "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter/smali*/ -type f -name '*.smali' 2>/dev/null | xargs grep -rl 'gb_game_content' | sed 's/^\.\///' | sort)
          int=$(cat $mod7 | grep -n "gb_game_content" | cut -d ":" -f 1)
          for i in $int
          do
            i=$(echo "$i - 3" | bc)
            uu=$(sed -n "${i}p" $mod7 | sed 's/.method public static//g' | awk -F "(" '{print $2}')
            if [ $uu = ")Z" ];then
              moduu=$(sed -n "${i}p" $mod7)
              sudo sed -i "/^$moduu/,/^.end method/{//!d}" $mod7
              sudo sed -i -e "/^$moduu/a\    .registers 3\n\n    const/4 v0, 0x0\n\n   return v0" $mod7
            fi
          done
          mod8=$(find "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter/smali*/ -type f -name '*.smali' 2>/dev/null | xargs grep -rl 'key_check_item_root' | sed 's/^\.\///' | sort)
          item=$(grep -B 10 key_check_item_root $mod8 | grep -n "()Z" | cut -d ":" -f 2)
          sudo sed -i "/^$item/,/^.end method/{//!d}" $mod8
          sudo sed -i -e "/^$item/a\    .registers 3\n\n    const/4 v0, 0x0\n\n   return v0" $mod8
          mod9=$(find "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter/smali*/ -type f -name '*.smali' 2>/dev/null | xargs grep -rl 'pref_gb_unsupport_macro_apps' | sed 's/^\.\///' | sort)
          sudo sed -i 's/const\/4 p0, 0x1/const\/4 p0, 0x0/g' $mod9
          mod10=$(find "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter/smali*/ -type f -name '*.smali' 2>/dev/null | xargs grep -rl 'nothing when close recommend' | sed 's/^\.\///' | sort)
          sudo sed -i 's/invoke-static {v2}, Lcom\/miui\/gamebooster\/globalgame\/util\/d;->a(Ljava\/util\/Collection;)Z/invoke-static {v2}, Lmiui\/czh;->Enable(Ljava\/util\/Collection;)Z/g' $mod10
          sudo mkdir -p "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter/smali/miui/
          sudo cp -rf "$GITHUB_WORKSPACE"/resource/czh.smali "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter/smali/miui/
          cd "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/
          sudo $Apktool b -q -f "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter/ -o MIUISecurityCenter.apk
          sudo mkdir -p "$GITHUB_WORKSPACE"/MIUISecurityCenter/three/res/xml/
          for files in pc_power_settings.xml pc_power_settings_v12.xml
          do
            b=$(find "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/res/MIUISecurityCenter/build/ -name $files)
            sudo cp -rf $b "$GITHUB_WORKSPACE"/MIUISecurityCenter/three/res/xml/
          done
          sudo unzip -o "$GITHUB_WORKSPACE"/MIUISecurityCenter/one/MIUISecurityCenter.apk -d "$GITHUB_WORKSPACE"/MIUISecurityCenter/three/
          cd "$GITHUB_WORKSPACE"/MIUISecurityCenter/three/
          sudo 7z a "$GITHUB_WORKSPACE"/images/system/system/priv-app/MIUISecurityCenter/MIUISecurityCenter.apk ./* -mx0
          sudo rm -rf "$GITHUB_WORKSPACE"/images/system/system/priv-app/MIUISecurityCenter/oat
          sudo mv "$GITHUB_WORKSPACE"/images/system/system/priv-app/MIUISecurityCenter/MIUISecurityCenter.apk "$GITHUB_WORKSPACE"/MIUISecurityCenter/MIUISecurityCenter.apk
          sudo zipalign -v 4 "$GITHUB_WORKSPACE"/MIUISecurityCenter/MIUISecurityCenter.apk "$GITHUB_WORKSPACE"/images/system/system/priv-app/MIUISecurityCenter/MIUISecurityCenter.apk >/dev/null
          sudo unzip -o -q "$GITHUB_WORKSPACE"/MIUISecurityCenter/MIUISecurityCenter.apk 'lib/arm64-v8a/*' -d "$GITHUB_WORKSPACE"/images/system/system/priv-app/MIUISecurityCenter/
          sudo mv "$GITHUB_WORKSPACE"/images/system/system/priv-app/MIUISecurityCenter/lib/arm64-v8a "$GITHUB_WORKSPACE"/images/system/system/priv-app/MIUISecurityCenter/lib/arm64
          #部分精简
          for files in MIGalleryLockscreen MIUIDriveMode MIUIDuokanReader MIUIGameCenter MIUINewHome MIUIYoupin
          do
          device=$(sudo find "$GITHUB_WORKSPACE"/images/system/system/data-app/ -name $files)
          sudo rm -rf $device
          done
          sudo mv -f "$GITHUB_WORKSPACE"/resource/vbmeta.img "$GITHUB_WORKSPACE"/images/firmware-update
          sudo mv -f "$GITHUB_WORKSPACE"/resource/vbmeta_system.img "$GITHUB_WORKSPACE"/images/firmware-update
          sudo cp -r "$GITHUB_WORKSPACE"/zstd-test/* "$GITHUB_WORKSPACE"/images
          sudo rm -rf "$GITHUB_WORKSPACE"/MiLink
          sudo rm -rf "$GITHUB_WORKSPACE"/MiuiCamera
          sudo rm -rf "$GITHUB_WORKSPACE"/Settings
          for i in system vendor product system_ext odm
          do
            sudo touch -t 200901010000.00 "$GITHUB_WORKSPACE"/images/$i/lost+found
          done
       - name: 6.打包
         run: |
          sudo chmod 777 "$GITHUB_WORKSPACE"/tools/mke2fs
          sudo chmod 777 "$GITHUB_WORKSPACE"/tools/e2fsdroid
          sudo chmod 777 "$GITHUB_WORKSPACE"/tools/lpmake
          for i in system vendor product odm system_ext
          do
          eval "$i"_size_orig=$(sudo du -sb "$GITHUB_WORKSPACE"/images/$i | awk {'print $1'})
          if [[ "$(eval echo "$"$i"_size_orig")" -le "10485760" ]]; then
            size=$(echo "$(eval echo "$"$i"_size_orig") * 12 / 10 / 4096 * 4096" | bc)
          elif [[ "$(eval echo "$"$i"_size_orig")" -gt "2684354560" ]]; then
            size=$(echo "$(eval echo "$"$i"_size_orig") * 109 / 105 / 4096 * 4096" | bc)
          else
            size=$(echo "$(eval echo "$"$i"_size_orig") * 12 / 11 / 4096 * 4096" | bc)
          fi
          echo $size
          eval "$i"_size=$size
          done
          system_size=$(echo "$system_size * 4096 / 4096 / 4096" | bc)
          vendor_size=$(echo "$vendor_size * 4096 / 4096 / 4096" | bc)
          product_size=$(echo "$product_size * 4096 / 4096 / 4096" | bc)
          odm_size=$(echo "$odm_size * 4096 / 4096 / 4096" | bc)
          system_ext_size=$(echo "$system_ext_size * 4096 / 4096 / 4096" | bc)
          system_indoe=${{ env.system_indoe }}
          vendor_indoe=${{ env.vendor_indoe }}
          product_indoe=${{ env.product_indoe }}
          odm_indoe=192
          system_ext_indoe=${{ env.system_ext_indoe }}
          UTC=$(date -u +%s)
          for i in system vendor product odm system_ext
          do
              while true;do
              eval echo "$"$i"_size"
              sudo python3 "$GITHUB_WORKSPACE"/tools/fspatch.py "$GITHUB_WORKSPACE"/images/$i "$GITHUB_WORKSPACE"/images/TI_config/"$i"_fs_config
              "$GITHUB_WORKSPACE"/tools/mke2fs -O ^has_journal -L $i -I 256 -N $(eval echo "$"$i"_indoe") -M /$i -m 0 -t ext4 -b 4096 "$GITHUB_WORKSPACE"/images/$i.img $(eval echo "$"$i"_size")
              sudo "$GITHUB_WORKSPACE"/tools/e2fsdroid -T 1230768000 -C "$GITHUB_WORKSPACE"/images/TI_config/"$i"_fs_config -S "$GITHUB_WORKSPACE"/images/TI_config/"$i"_file_contexts -f "$GITHUB_WORKSPACE"/images/$i -a /$i -e -s "$GITHUB_WORKSPACE"/images/$i.img
              resize2fs -f -M "$GITHUB_WORKSPACE"/images/$i.img
              eval "$i"_size=$(du -sb "$GITHUB_WORKSPACE"/images/$i.img | awk {'print $1'})
              size_free=$(tune2fs -l "$GITHUB_WORKSPACE"/images/$i.img | awk '/Free blocks:/ { print $3}')
              size_free=$(echo "$size_free * 4096" | bc)
              eval "$i"_size=$(echo "$(eval echo "$"$i"_size") - $size_free" | bc)
              eval "$i"_size=$(echo "$(eval echo "$"$i"_size") / 4096" | bc)
              if [[ $size_free = 0 ]];then
                system_indoe=${{ env.system_indoe }}
                vendor_indoe=${{ env.vendor_indoe }}
                product_indoe=${{ env.product_indoe }}
                odm_indoe=192
                system_ext_indoe=${{ env.system_ext_indoe }}
                eval "$i"_size=$(du -sb "$GITHUB_WORKSPACE"/images/$i.img | awk {'print $1'})
                sudo rm -rf "$GITHUB_WORKSPACE"/images/$i.img
                original_size=$(echo "$(eval echo "$"$i"_size") / 524288000 * 377 * 4096" | bc)
                eval "$i"_size=$(echo "$original_size + $(eval echo "$"$i"_size")" | bc)
                eval echo "$"$i"_size"
                eval "$i"_size=$(echo "$(eval echo "$"$i"_size") / 4096" | bc)
                sudo python3 "$GITHUB_WORKSPACE"/tools/fspatch.py "$GITHUB_WORKSPACE"/images/$i "$GITHUB_WORKSPACE"/images/TI_config/"$i"_fs_config
                "$GITHUB_WORKSPACE"/tools/mke2fs -O ^has_journal -L $i -I 256 -N $(eval echo "$"$i"_indoe") -M /$i -m 0 -t ext4 -b 4096 "$GITHUB_WORKSPACE"/images/$i.img $(eval echo "$"$i"_size")
                sudo "$GITHUB_WORKSPACE"/tools/e2fsdroid -T 1230768000 -C "$GITHUB_WORKSPACE"/images/TI_config/"$i"_fs_config -S "$GITHUB_WORKSPACE"/images/TI_config/"$i"_file_contexts -f "$GITHUB_WORKSPACE"/images/$i -a /$i -e -s "$GITHUB_WORKSPACE"/images/$i.img
                resize2fs -f -M "$GITHUB_WORKSPACE"/images/$i.img
                eval "$i"_size=$(du -sb "$GITHUB_WORKSPACE"/images/$i.img | awk {'print $1'})
                eval echo "$"$i"_size"
                sudo rm -rf "$GITHUB_WORKSPACE"/images/$i
                break
              else
                sudo rm -rf "$GITHUB_WORKSPACE"/images/$i.img
              fi
              done
          done
          sudo rm -rf "$GITHUB_WORKSPACE"/images/TI_config
          "$GITHUB_WORKSPACE"/tools/lpmake --metadata-size 65536 --super-name super --block-size 4096 --partition odm:readonly:$odm_size:qti_dynamic_partitions --image odm="$GITHUB_WORKSPACE"/images/odm.img --partition product:readonly:$product_size:qti_dynamic_partitions --image product="$GITHUB_WORKSPACE"/images/product.img --partition system:readonly:$system_size:qti_dynamic_partitions --image system="$GITHUB_WORKSPACE"/images/system.img --partition system_ext:readonly:$system_ext_size:qti_dynamic_partitions --image system_ext="$GITHUB_WORKSPACE"/images/system_ext.img --partition vendor:readonly:$vendor_size:qti_dynamic_partitions --image vendor="$GITHUB_WORKSPACE"/images/vendor.img --device super:9126805504 --metadata-slots 2 --group qti_dynamic_partitions:9126805504 -F --output "$GITHUB_WORKSPACE"/images/super.img
          for i in product system system_ext vendor odm; do
              rm -rf "$GITHUB_WORKSPACE"/images/$i.img
          done
          zstd "$GITHUB_WORKSPACE"/images/super.img -o "$GITHUB_WORKSPACE"/images/super.zst --rm
          sudo touch -t 200901010000.00 "$GITHUB_WORKSPACE"/images/*
          sudo touch -t 200901010000.00 "$GITHUB_WORKSPACE"/images/*/*
          sudo touch -t 200901010000.00 "$GITHUB_WORKSPACE"/images/*/*/*
          sudo touch -t 200901010000.00 "$GITHUB_WORKSPACE"/images/*/*/*/*
          sudo touch -t 200901010000.00 "$GITHUB_WORKSPACE"/images/*/*/*/*/*
          sudo 7z a "$GITHUB_WORKSPACE"/zip/miui_LMIPRE_${{ env.date }}.zip "$GITHUB_WORKSPACE"/images/*
          sudo rm -rf "$GITHUB_WORKSPACE"/images
          md5=$(md5sum "$GITHUB_WORKSPACE"/zip/miui_LMIPRE_${{ env.date }}.zip)
          echo "MD5=${md5:0:32}" >> $GITHUB_ENV
          zipmd5=${md5:0:10}
          mv "$GITHUB_WORKSPACE"/zip/miui_LMIPRE_${{ env.date }}.zip "$GITHUB_WORKSPACE"/zip/miui_LMIPRE_"${{ env.date }}"_"$zipmd5"_12.0_2in1_Root.zip
          echo "NEW_PACKAGE_NAME=miui_LMIPRE_"${{ env.date }}"_"$zipmd5"_12.0_2in1_Root.zip" >> $GITHUB_ENV
       - name: 7.上传到Onedrive
         run: |
          rclone mkdir OneDrive:/MI_Packages/LMI_Packages
          rclone sync -P ./zip/* OneDrive:/MI_Packages/LMI_Packages
       - name: 8.更新rom信息
         run: |
          mkdir "$GITHUB_WORKSPACE"/romdata && touch "$GITHUB_WORKSPACE"/romdata/lmi.ini
          echo lmiPKG=${{ env.NEW_PACKAGE_NAME }} >> "$GITHUB_WORKSPACE"/romdata/lmi.ini
          echo lmiMD5=${{ env.MD5 }} >> "$GITHUB_WORKSPACE"/romdata/lmi.ini
          echo lmiTIME=\"$(TZ=':Asia/Shanghai' date '+%Y.%m.%d %H:%M')\" >> "$GITHUB_WORKSPACE"/romdata/lmi.ini
          echo lmiURL=https://onedrive.zjw.js.cn/Direct/LMI_Packages/${{ env.NEW_PACKAGE_NAME }} >> "$GITHUB_WORKSPACE"/romdata/lmi.ini
       - name: 9.导出信息
         uses: dmnemec/copy_file_to_another_repo_action@main
         env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
         with:
          source_file: 'romdata/lmi.ini'
          destination_repo: 'zjw2017/sm8250-page'
          destination_folder: 'device'
          user_email: 'example@email.com'
          user_name: 'zjw2017'
          commit_message: 'Update from $GITHUB_REF'
       - name: 10.删除工作流运行
         uses: Mattraks/delete-workflow-runs@v2
         with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0
