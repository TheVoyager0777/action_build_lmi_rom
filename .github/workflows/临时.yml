name: build_lmi_system_wen
on: 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
       - uses: actions/checkout@master
       - name: 获取配置
         run: |
            source "$GITHUB_WORKSPACE"/config.env
            echo "ROM_URL=https://hugeota.d.miui.com/V12.5.6.0.RFKCNXM/miui_RAPHAEL_V12.5.6.0.RFKCNXM_f5fe3b4a6f_11.0.zip" >> $GITHUB_ENV
            echo "camera1=$camera1" >> $GITHUB_ENV
            echo "camera2=$camera2" >> $GITHUB_ENV
       - name: 1.安装依赖
         run: |
            sudo apt install python3 python3-pip aria2 zip p7zip-full zipalign
            sudo apt --fix-broken install
            sudo apt update --fix-missing
            pip3 install --upgrade pip
            pip3 install pycryptodome
            pip3 install docopt
            pip3 install requests
            pip3 install beautifulsoup4
            pip3 install --ignore-installed pyyaml
       - name: 2.下载系统包
         run: |
            aria2c -x16 -j$(nproc) -U "Mozilla/5.0" -d "$GITHUB_WORKSPACE" ${{ env.ROM_URL }}
            aria2c -x16 -j$(nproc) -U "Mozilla/5.0" -d "$GITHUB_WORKSPACE" https://hugeota.d.miui.com/22.7.19/miui_LMIPRE_22.7.19_0c8ec819b7_12.0.zip
       - name: 3.解包
         run: |
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/payload-dumper-go
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/brotli
            mkdir -p "$GITHUB_WORKSPACE"/PSYCHE
            mkdir -p "$GITHUB_WORKSPACE"/images
            mkdir -p "$GITHUB_WORKSPACE"/simages
            mkdir -p "$GITHUB_WORKSPACE"/zip
            mkdir -p "$GITHUB_WORKSPACE"/firmware
            URL=${{ env.ROM_URL }}
            ZIP_NAME_PSYCHE=${URL##*/}
            7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_PSYCHE -r -o"$GITHUB_WORKSPACE"/PSYCHE
            rm -rf "$GITHUB_WORKSPACE"/$ZIP_NAME_PSYCHE
            ZIP_NAME_LMI=miui_LMIPRE_22.7.19_0c8ec819b7_12.0.zip
            7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_LMI -r -o"$GITHUB_WORKSPACE"/images firmware-update
            7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_LMI -r -o"$GITHUB_WORKSPACE"/images boot.img
            for i in system
            do
                7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_LMI -o"$GITHUB_WORKSPACE"/images $i.transfer.list
                7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_LMI -o"$GITHUB_WORKSPACE"/images $i.patch.dat
                7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_LMI -o"$GITHUB_WORKSPACE"/images $i.new.dat.br
                "$GITHUB_WORKSPACE"/tools/brotli -d "$GITHUB_WORKSPACE"/images/$i.new.dat.br
                rm -rf "$GITHUB_WORKSPACE"/images/$i.new.dat.br
                python3 "$GITHUB_WORKSPACE"/tools/sdat2img.py "$GITHUB_WORKSPACE"/images/$i.transfer.list "$GITHUB_WORKSPACE"/images/$i.new.dat "$GITHUB_WORKSPACE"/images/$i.img
                rm -rf "$GITHUB_WORKSPACE"/images/$i.patch.dat
                rm -rf "$GITHUB_WORKSPACE"/images/$i.transfer.list
                rm -rf "$GITHUB_WORKSPACE"/images/$i.new.dat
                echo ""$i"_size=$(sudo du -sb "$GITHUB_WORKSPACE"/images/$i.img | awk {'print $1'})" >> $GITHUB_ENV
                echo ""$i"_indoe=$(tune2fs -l "$GITHUB_WORKSPACE"/images/$i.img | grep 'Inode count' | awk '{print $3}')" >> $GITHUB_ENV
                sudo python3 "$GITHUB_WORKSPACE"/tools/imgextractorLinux.py "$GITHUB_WORKSPACE"/images/$i.img "$GITHUB_WORKSPACE"/images
                rm -rf $GITHUB_WORKSPACE"/images/$i.img
            done
       - name: 5.打包
         run: |
            sudo 7z a "$GITHUB_WORKSPACE"/zip/miui_LMIPRE_$date.zip "$GITHUB_WORKSPACE"/images/system/system/framework/services.jar
            sudo rm -rf "$GITHUB_WORKSPACE"/images
       - name: 6.上传到123云盘
         run: |
            curl https://rclone.org/install.sh | sudo bash
            mkdir -p ~/.config/rclone/
            unzip -P ${{ secrets.PASSWORD }} "$GITHUB_WORKSPACE"/tools/rclone.zip -d ~/.config/rclone/
            curl -fsSL "https://nn.ci/alist.sh" | sudo bash -s install
            sudo systemctl stop alist
            sudo mv -f /home/runner/.config/rclone/data.db /opt/alist/data
            sudo systemctl start alist
            rclone mkdir 123pan:/LMI_DEV
            rclone sync -P ./zip/* 123pan:/LMI_DEV
       - name: 7.删除工作流运行
         uses: Mattraks/delete-workflow-runs@v2
         with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0
