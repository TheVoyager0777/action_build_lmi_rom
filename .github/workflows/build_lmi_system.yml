name: build_lmi_system
on: 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
       - uses: actions/checkout@master
       - name: 获取配置
         run: |
            source "$GITHUB_WORKSPACE"/config.env
            echo "ROM_URL=$ROM_URL" >> $GITHUB_ENV
            echo "camera1=$camera1" >> $GITHUB_ENV
            echo "camera2=$camera2" >> $GITHUB_ENV
       - name: 1.安装依赖
         run: |
            sudo apt install python3 python3-pip aria2 zip p7zip-full zipalign
            sudo apt --fix-broken install
            sudo apt update --fix-missing
            pip3 install --upgrade pip
            pip3 install aliyundrive-webdav
            pip3 install pycryptodome
            pip3 install docopt
            pip3 install requests
            pip3 install beautifulsoup4
            pip3 install --ignore-installed pyyaml
       - name: 2.下载系统包
         run: |
            aria2c -x16 -j$(nproc) -U "Mozilla/5.0" -d "$GITHUB_WORKSPACE" ${{ env.ROM_URL }}
            aria2c -x16 -j$(nproc) -U "Mozilla/5.0" -d "$GITHUB_WORKSPACE" https://hugeota.d.miui.com/22.7.19/miui_LMIPRE_22.7.19_0c8ec819b7_12.0.zip
       - name: 3.解包
         run: |
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/payload-dumper-go
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/brotli
            mkdir -p "$GITHUB_WORKSPACE"/PSYCHE
            mkdir -p "$GITHUB_WORKSPACE"/images
            mkdir -p "$GITHUB_WORKSPACE"/simages
            mkdir -p "$GITHUB_WORKSPACE"/zip
            mkdir -p "$GITHUB_WORKSPACE"/firmware
            URL=${{ env.ROM_URL }}
            ZIP_NAME_PSYCHE=${URL##*/}
            7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_PSYCHE -r -o"$GITHUB_WORKSPACE"/PSYCHE
            rm -rf "$GITHUB_WORKSPACE"/$ZIP_NAME_PSYCHE
            ZIP_NAME_LMI=miui_LMIPRE_22.7.19_0c8ec819b7_12.0.zip
            7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_LMI -r -o"$GITHUB_WORKSPACE"/images firmware-update
            7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_LMI -r -o"$GITHUB_WORKSPACE"/images boot.img
            for i in vendor
            do
                7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_LMI -o"$GITHUB_WORKSPACE"/images $i.transfer.list
                7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_LMI -o"$GITHUB_WORKSPACE"/images $i.patch.dat
                7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_LMI -o"$GITHUB_WORKSPACE"/images $i.new.dat.br
                "$GITHUB_WORKSPACE"/tools/brotli -d "$GITHUB_WORKSPACE"/images/$i.new.dat.br
                rm -rf "$GITHUB_WORKSPACE"/images/$i.new.dat.br
                python3 "$GITHUB_WORKSPACE"/tools/sdat2img.py "$GITHUB_WORKSPACE"/images/$i.transfer.list "$GITHUB_WORKSPACE"/images/$i.new.dat "$GITHUB_WORKSPACE"/images/$i.img
                rm -rf "$GITHUB_WORKSPACE"/images/$i.patch.dat
                rm -rf "$GITHUB_WORKSPACE"/images/$i.transfer.list
                rm -rf "$GITHUB_WORKSPACE"/images/$i.new.dat
                echo ""$i"_size=$(sudo du -sb "$GITHUB_WORKSPACE"/images/$i.img | awk {'print $1'})" >> $GITHUB_ENV
                sudo python3 "$GITHUB_WORKSPACE"/tools/imgextractorLinux.py "$GITHUB_WORKSPACE"/images/$i.img "$GITHUB_WORKSPACE"/images
                echo "com_"$i"_size=$(sudo du -sb "$GITHUB_WORKSPACE"/images/$i | awk {'print $1'})" >> $GITHUB_ENV
                rm -rf "$GITHUB_WORKSPACE"/images/vendor.img
            done
            for i in system product system_ext
            do
                "$GITHUB_WORKSPACE"/tools/payload-dumper-go -p $i "$GITHUB_WORKSPACE"/PSYCHE/payload.bin
                mv "$GITHUB_WORKSPACE"/payload/$i.img "$GITHUB_WORKSPACE"/images/$i.img
                echo ""$i"_size=$(sudo du -sb "$GITHUB_WORKSPACE"/images/$i.img | awk {'print $1'})" >> $GITHUB_ENV
                sudo python3 "$GITHUB_WORKSPACE"/tools/imgextractorLinux.py "$GITHUB_WORKSPACE"/images/$i.img "$GITHUB_WORKSPACE"/images
                echo "com_"$i"_size=$(sudo du -sb "$GITHUB_WORKSPACE"/images/$i | awk {'print $1'})" >> $GITHUB_ENV
                rm -rf "$GITHUB_WORKSPACE"/images/$i.img
            done
            rm -rf "$GITHUB_WORKSPACE"/payload
            rm -rf "$GITHUB_WORKSPACE"/PSYCHE
       - name: 4.替换相关文件
         run: |
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/apktool.jar
            Apktool="java -jar "$GITHUB_WORKSPACE"/tools/apktool.jar"
            sudo mkdir -p "$GITHUB_WORKSPACE"/images/system/system/etc/audio
            sudo rm -rf "$GITHUB_WORKSPACE"/images/product/etc/device_features/*
            sudo rm -rf "$GITHUB_WORKSPACE"/images/product/overlay/DeviceAndroidConfig.apk
            sudo rm -rf "$GITHUB_WORKSPACE"/images/product/overlay/DeviceConfig.apk
            sudo cp -f "$GITHUB_WORKSPACE"/AospFrameworkResOverlay.apk "$GITHUB_WORKSPACE"/images/product/overlay/
            sudo cp -f "$GITHUB_WORKSPACE"/DevicesAndroidOverlay.apk "$GITHUB_WORKSPACE"/images/product/overlay/
            sudo cp -f "$GITHUB_WORKSPACE"/DevicesOverlay.apk "$GITHUB_WORKSPACE"/images/product/overlay/
            sudo cp -f "$GITHUB_WORKSPACE"/MiuiFrameworkResOverlay.apk "$GITHUB_WORKSPACE"/images/product/overlay/
            sudo cp -f "$GITHUB_WORKSPACE"/lmi.xml "$GITHUB_WORKSPACE"/images/product/etc/device_features/
            sudo cp -f "$GITHUB_WORKSPACE"/lmipro.xml "$GITHUB_WORKSPACE"/images/product/etc/device_features/
            sudo sed -i "/ro.miui.notch/d" "$GITHUB_WORKSPACE"/images/product/etc/build.prop
            sudo rm -rf "$GITHUB_WORKSPACE"/images/system/cache
            sudo mkdir -p "$GITHUB_WORKSPACE"/images/system/cache
            sudo sed -i 's/ro.product.mod_device=[^*]*/ro.product.mod_device=lmi_pre/' "$GITHUB_WORKSPACE"/images/system/system/build.prop
            sudo sed -i 's/ro.miui.cust_device=[^*]*/ro.miui.cust_device=lmi/' "$GITHUB_WORKSPACE"/images/system/system/build.prop
            sudo rm -rf "$GITHUB_WORKSPACE"/images/vendor/recovery-from-boot.p
            sudo rm -rf "$GITHUB_WORKSPACE"/images/vendor/bin/install-recovery.sh
            sudo sed -i "/ro.vendor.audio.game.effect/d" "$GITHUB_WORKSPACE"/images/vendor/build.prop
            sudo sed -i "/import/i ro.vendor.audio.support.sound.id=true\nro.vendor.audio.voip.assistant=true\nro.vendor.audio.aiasst.support=true\nro.vendor.media.video.frc.support=true\nro.vendor.audio.spk.stereo=true\nro.vendor.audio.vocal.support=true\nro.vendor.audio.surround.support=true\nro.vendor.audio.spk.clean=true\nro.vendor.video_box.version=2" "$GITHUB_WORKSPACE"/images/vendor/build.prop
            sudo unzip -o -q "$GITHUB_WORKSPACE"/nfc.zip -d "$GITHUB_WORKSPACE"/images/system_ext            
            sudo unzip -o -q "$GITHUB_WORKSPACE"/audio.zip -d "$GITHUB_WORKSPACE"/images/system/system/media/audio/ui/
            sudo unzip -o -q "$GITHUB_WORKSPACE"/etc.zip -d "$GITHUB_WORKSPACE"/images/system/system/etc/audio/
            sudo unzip -o -q "$GITHUB_WORKSPACE"/popup.zip -d "$GITHUB_WORKSPACE"/images/system/system/framework/
            sudo mkdir -p "$GITHUB_WORKSPACE"/MiLink/
            $Apktool d -q -r -f -o "$GITHUB_WORKSPACE"/MiLink/ "$GITHUB_WORKSPACE"/images/system/system/app/MiLinkCirculate/MiLinkCirculate.apk
            mod="$GITHUB_WORKSPACE"/MiLink/smali*/com/miui/circulate/world/permission/method/PermissionCheck\$BaseCheck.smali
            sudo sed -i '/^.method public check()Z/,/^.end method/{//!d}' $mod
            sudo sed -i -e '/^.method public check()Z/a\    .locals 1\n\n    const/4 v0, 0x1\n\n   return v0' $mod
            $Apktool b -q -f -o "$GITHUB_WORKSPACE"/MiLink/MiLinkCirculate.apk "$GITHUB_WORKSPACE"/MiLink/
            cd "$GITHUB_WORKSPACE"/MiLink/build/apk
            sudo 7z a "$GITHUB_WORKSPACE"/images/system/system/app/MiLinkCirculate/MiLinkCirculate.apk ./*.dex -mx0
            sudo rm -rf "$GITHUB_WORKSPACE"/images/system/system/app/MiLinkCirculate/oat
            sudo mv "$GITHUB_WORKSPACE"/images/system/system/app/MiLinkCirculate/MiLinkCirculate.apk "$GITHUB_WORKSPACE"/MiLink/MiLinkCirculate.apk
            sudo zipalign -v 4 "$GITHUB_WORKSPACE"/MiLink/MiLinkCirculate.apk "$GITHUB_WORKSPACE"/images/system/system/app/MiLinkCirculate/MiLinkCirculate.apk >/dev/null
            sudo mkdir -p "$GITHUB_WORKSPACE"/images/system/system/app/MiLinkCirculate/lib/arm64/
            sudo mv "$GITHUB_WORKSPACE"/MiLink/lib/arm64-v8a/* "$GITHUB_WORKSPACE"/images/system/system/app/MiLinkCirculate/lib/arm64/
            sudo mkdir -p "$GITHUB_WORKSPACE"/MiuiCamera/
            $Apktool d -q -r -f -o "$GITHUB_WORKSPACE"/MiuiCamera/ "$GITHUB_WORKSPACE"/images/system/system/priv-app/MiuiCamera/MiuiCamera.apk
            mod="$GITHUB_WORKSPACE"/MiuiCamera/smali*/${{ env.camera1 }}
            sudo sed -i '/^${{ env.camera2 }}/,/^.end method/{//!d}' $mod
            sudo sed -i -e '/^${{ env.camera2 }}/a\    .registers 1\n\n    const/4 p0, 0x0\n\n   return p0' $mod
            $Apktool b -q -f -o "$GITHUB_WORKSPACE"/MiuiCamera/MiuiCamera.apk "$GITHUB_WORKSPACE"/MiuiCamera/
            cd "$GITHUB_WORKSPACE"/MiuiCamera/build/apk
            sudo 7z a "$GITHUB_WORKSPACE"/images/system/system/priv-app/MiuiCamera/MiuiCamera.apk ./*.dex -mx0
            sudo rm -rf "$GITHUB_WORKSPACE"/images/system/system/priv-app/MiuiCamera/oat
            sudo mv "$GITHUB_WORKSPACE"/images/system/system/priv-app/MiuiCamera/MiuiCamera.apk "$GITHUB_WORKSPACE"/MiuiCamera/MiuiCamera.apk
            sudo zipalign -v 4 "$GITHUB_WORKSPACE"/MiuiCamera/MiuiCamera.apk "$GITHUB_WORKSPACE"/images/system/system/priv-app/MiuiCamera/MiuiCamera.apk >/dev/null
            sudo mv "$GITHUB_WORKSPACE"/MiuiCamera/lib/arm64-v8a/* "$GITHUB_WORKSPACE"/images/system/system/priv-app/MiuiCamera/lib/arm64/
            for files in MIGalleryLockscreen MIUIDriveMode MIUIDuokanReader MIUIGameCenter MIUINewHome MIUIYoupin
            do
            device=$(find "$GITHUB_WORKSPACE"/images/system/system/data-app/ -name $files)
            sudo rm -rf $device
            done
            sudo mv -f "$GITHUB_WORKSPACE"/vbmeta.img "$GITHUB_WORKSPACE"/images/firmware-update
            sudo mv -f "$GITHUB_WORKSPACE"/vbmeta_system.img "$GITHUB_WORKSPACE"/images/firmware-update
            sudo cp -r "$GITHUB_WORKSPACE"/META-INF "$GITHUB_WORKSPACE"/images
            sudo cp -f "$GITHUB_WORKSPACE"/dynamic_partitions_op_list "$GITHUB_WORKSPACE"/images
            sudo rm -rf "$GITHUB_WORKSPACE"/MiLink
            sudo rm -rf "$GITHUB_WORKSPACE"/MiuiCamera
       - name: 5.打包
         run: |
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/mke2fs
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/e2fsdroid
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/img2simg
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/brotli
            URL=${{ env.ROM_URL }}
            DATE=${URL%/*}
            date=${DATE##*/}
            product_org_size=${{ env.com_product_size }}
            vendor_org_size=${{ env.com_vendor_size }}
            system_ext_org_size=${{ env.com_system_ext_size }}
            system_org_size=${{ env.com_system_size }}
            product_size=${{ env.product_size }}
            vendor_size=${{ env.vendor_size }}
            system_ext_size=${{ env.system_ext_size }}
            system_size=${{ env.system_size }}
            for i in product vendor system_ext system
            do
            eval "$i"_ota_size=0
            eval "$i"_org_ota_size=$(sudo du -sb "$GITHUB_WORKSPACE"/images/$i | awk {'print $1'})
            if [[ $(eval echo "$"$i"_org_ota_size") -lt $(eval echo "$"$i"_org_size") ]];then
              increase_size=$(echo "$(eval echo "$"$i"_org_size") - $(eval echo "$"$i"_org_ota_size")" | bc)
              Variables_size=$(echo "$increase_size / 20" | bc)
              Variables_size1=$(echo "$increase_size - $Variables_size" | bc)
              Variables_size2=$(echo "0 - $Variables_size1" | bc)
              eval "$i"_ota_size=$Variables_size2
            elif [[ $""$i"_org_ota_size" -gt $""$i"_org_size" ]];then
              increase_size=$(echo "$(eval echo "$"$i"_org_ota_size") - $(eval echo "$"$i"_org_size")" | bc)
              Variables_size=$(echo "$increase_size / 20" | bc)
              Variables_size1=$(echo "$increase_size + $Variables_size" | bc)
              eval "$i"_ota_size=$Variables_size1
            fi
            done
            product_size=$(echo "$product_size + $product_ota_size" | bc)
            product_size=$(echo "$product_size / 4096" | bc)
            vendor_size=$(echo "$vendor_size + $vendor_ota_size" | bc)
            vendor_size=$(echo "$vendor_size / 4096" | bc)
            system_ext_size=$(echo "$system_ext_size + $system_ext_ota_size" | bc)
            system_ext_size=$(echo "$system_ext_size / 4096" | bc)
            system_size=$(echo "$system_size + $system_ota_size" | bc)
            system_size=$(echo "$system_size / 4096" | bc)
            UTC=$(date -u +%s)
            for i in system vendor product system_ext
            do
                sudo python3 "$GITHUB_WORKSPACE"/tools/fspatch.py "$GITHUB_WORKSPACE"/images/$i "$GITHUB_WORKSPACE"/images/TI_config/"$i"_fs_config
                "$GITHUB_WORKSPACE"/tools/mke2fs -O ^has_journal -L $i -I 256 -M /$i -m 0 -t ext4 -b 4096 "$GITHUB_WORKSPACE"/images/$i.img $(eval echo "$"$i"_size")
                sudo "$GITHUB_WORKSPACE"/tools/e2fsdroid -T 1230768000 -C "$GITHUB_WORKSPACE"/images/TI_config/"$i"_fs_config -S "$GITHUB_WORKSPACE"/images/TI_config/"$i"_file_contexts -f "$GITHUB_WORKSPACE"/images/$i -a /$i -e -s "$GITHUB_WORKSPACE"/images/$i.img
                resize2fs -f -M "$GITHUB_WORKSPACE"/images/$i.img
                eval "$i"_size=$(du -sb "$GITHUB_WORKSPACE"/images/$i.img | awk {'print $1'})
                sudo rm -rf "$GITHUB_WORKSPACE"/images/$i
            done
            sudo rm -rf "$GITHUB_WORKSPACE"/images/TI_config
            for i in product system system_ext vendor
            do
                "$GITHUB_WORKSPACE"/tools/img2simg "$GITHUB_WORKSPACE"/images/$i.img "$GITHUB_WORKSPACE"/simages/$i.img
                rm -rf "$GITHUB_WORKSPACE"/images/$i.img
                python3 "$GITHUB_WORKSPACE"/tools/img2sdat.py "$GITHUB_WORKSPACE"/simages/$i.img -o "$GITHUB_WORKSPACE"/simages/ -v 4 -p $i
                rm -rf "$GITHUB_WORKSPACE"/simages/$i.img
                "$GITHUB_WORKSPACE"/tools/brotli -q 5 "$GITHUB_WORKSPACE"/simages/$i.new.dat -o "$GITHUB_WORKSPACE"/images/$i.new.dat.br
                mv "$GITHUB_WORKSPACE"/simages/$i.transfer.list "$GITHUB_WORKSPACE"/simages/$i.patch.dat "$GITHUB_WORKSPACE"/images
                rm -rf "$GITHUB_WORKSPACE"/simages/$i.new.dat
            done
            rm -rf "$GITHUB_WORKSPACE"/simages
            sed -i "s/product_size/$product_size/g" "$GITHUB_WORKSPACE"/images/dynamic_partitions_op_list
            sed -i "s/vendor_size/$vendor_size/g" "$GITHUB_WORKSPACE"/images/dynamic_partitions_op_list
            sed -i "s/system_size/$system_size/g" "$GITHUB_WORKSPACE"/images/dynamic_partitions_op_list
            sed -i "s/system_ext_size/$system_ext_size/g" "$GITHUB_WORKSPACE"/images/dynamic_partitions_op_list
            sudo unzip -o "$GITHUB_WORKSPACE"/odm.zip -d "$GITHUB_WORKSPACE"/images/
            sudo 7z a "$GITHUB_WORKSPACE"/zip/miui_LMIPRE_$date.zip "$GITHUB_WORKSPACE"/images/* -mx6
            sudo rm -rf "$GITHUB_WORKSPACE"/images
            md5=$(md5sum "$GITHUB_WORKSPACE"/zip/miui_LMIPRE_$date.zip)
            zipmd5=${md5:0:10}
            mv "$GITHUB_WORKSPACE"/zip/miui_LMIPRE_$date.zip "$GITHUB_WORKSPACE"/zip/miui_LMIPRE_"$date"_"$zipmd5"_12.0.zip
       - name: 6.上传到阿里云盘
         run: |
            curl https://rclone.org/install.sh | sudo bash
            mkdir -p ~/.config/rclone/
            unzip -P ${{ secrets.PASSWORD }} "$GITHUB_WORKSPACE"/tools/rclone.zip -d ~/.config/rclone/
            nohup aliyundrive-webdav --refresh-token ${{ secrets.REFRESHTOKEN }} --host 127.0.0.1 --port 6396 --auth-user 3380572517 --auth-password ${{ secrets.PASSWORD }} >/dev/null 2>& 1 &
            rclone mkdir aliyun:/LMI_Package
            rclone sync -P ./zip/* aliyun:/LMI_Package
       - name: 7.上传到123云盘
         run: |
            curl -fsSL "https://nn.ci/alist.sh" | sudo bash -s install
            sudo systemctl stop alist
            sudo mv -f /home/runner/.config/rclone/data.db /opt/alist/data
            sudo systemctl start alist
            rclone mkdir 123pan:/LMI_DEV
            rclone sync -P ./zip/* 123pan:/LMI_DEV
       - name: 8.删除工作流运行
         uses: Mattraks/delete-workflow-runs@v2
         with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0
