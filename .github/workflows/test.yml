name: test
on: 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
       - uses: actions/checkout@master  
       - name: 获取配置
         run: |
            source "$GITHUB_WORKSPACE"/resource/config.env
            echo "ROM_URL=$ROM_URL" >> $GITHUB_ENV
            echo "date=$(echo $ROM_URL | cut -d"/" -f4)" >> $GITHUB_ENV
       - name: 1.安装依赖
         run: |
            sudo apt install python3 python3-pip aria2 zip p7zip-full zipalign
            sudo apt --fix-broken install
            sudo apt update --fix-missing
            pip3 install --upgrade pip
            pip3 install aliyundrive-webdav
            pip3 install pycryptodome
            pip3 install docopt
            pip3 install requests
            pip3 install beautifulsoup4
            pip3 install --ignore-installed pyyaml
       - name: 2.下载系统包
         run: |
            sudo which bash
            exit 1
            aria2c -x16 -j$(nproc) -U "Mozilla/5.0" -d "$GITHUB_WORKSPACE" ${{ env.ROM_URL }}
       - name: 3.解包
         run: |
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/payload-dumper-go
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/brotli
            mkdir -p "$GITHUB_WORKSPACE"/PSYCHE
            mkdir -p "$GITHUB_WORKSPACE"/LMI
            mkdir -p "$GITHUB_WORKSPACE"/images
            mkdir -p "$GITHUB_WORKSPACE"/simages
            mkdir -p "$GITHUB_WORKSPACE"/zip
            mkdir -p "$GITHUB_WORKSPACE"/firmware
            URL=${{ env.ROM_URL }}
            ZIP_NAME=${URL##*/}
            7z x "$GITHUB_WORKSPACE"/$ZIP_NAME -r -o"$GITHUB_WORKSPACE"/PSYCHE
            for i in modem
            do
                "$GITHUB_WORKSPACE"/tools/payload-dumper-go -p $i "$GITHUB_WORKSPACE"/PSYCHE/payload.bin
                mv "$GITHUB_WORKSPACE"/payload/$i.img "$GITHUB_WORKSPACE"/LMI/$i.img
            done
       - name: 5.打包
         run: |
            sudo 7z a "$GITHUB_WORKSPACE"/zip/miui_LMIPRE_${{ env.date }}_TEST.zip "$GITHUB_WORKSPACE"/LMI/*
            echo "artifact_name=miui_LMIPRE_${{ env.date }}_TEST" >> $GITHUB_ENV
            touch "$GITHUB_WORKSPACE"/file.log
            echo "${{ env.artifact_name }}" > "$GITHUB_WORKSPACE"/file.log
       - name: 6.上传到Github Release
         uses: ncipollo/release-action@main
         with:
           artifacts: ${{ github.workspace }}/zip/*
           name: "${{ env.date }}_Extracting"
           tag: "${{ env.date }}_Extracting"
           bodyFile: "${{ github.workspace }}/file.log"
           allowUpdates: true
           artifactErrorsFailBuild: true
           token: ${{ secrets.GITHUB_TOKEN }}
       - name: 7.删除工作流运行
         uses: Mattraks/delete-workflow-runs@v2
         with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0
